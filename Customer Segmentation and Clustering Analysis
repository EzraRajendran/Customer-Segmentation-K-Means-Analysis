{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2549419,"sourceType":"datasetVersion","datasetId":1546318}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Problem Statement","metadata":{}},{"cell_type":"markdown","source":" The goal is to identify distinct customer groups to improve customer satisfaction, retention, and sales.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:13.868215Z","iopub.execute_input":"2024-09-29T06:52:13.868732Z","iopub.status.idle":"2024-09-29T06:52:15.701943Z","shell.execute_reply.started":"2024-09-29T06:52:13.868665Z","shell.execute_reply":"2024-09-29T06:52:15.700149Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/customer-personality-analysis/marketing_campaign.csv\" , sep='\\t')","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.704477Z","iopub.execute_input":"2024-09-29T06:52:15.706090Z","iopub.status.idle":"2024-09-29T06:52:15.743233Z","shell.execute_reply.started":"2024-09-29T06:52:15.706024Z","shell.execute_reply":"2024-09-29T06:52:15.741841Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.745183Z","iopub.execute_input":"2024-09-29T06:52:15.746293Z","iopub.status.idle":"2024-09-29T06:52:15.798163Z","shell.execute_reply.started":"2024-09-29T06:52:15.746235Z","shell.execute_reply":"2024-09-29T06:52:15.796286Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"     ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n0  5524        1957  Graduation         Single  58138.0        0         0   \n1  2174        1954  Graduation         Single  46344.0        1         1   \n2  4141        1965  Graduation       Together  71613.0        0         0   \n3  6182        1984  Graduation       Together  26646.0        1         0   \n4  5324        1981         PhD        Married  58293.0        1         0   \n\n  Dt_Customer  Recency  MntWines  ...  NumWebVisitsMonth  AcceptedCmp3  \\\n0  04-09-2012       58       635  ...                  7             0   \n1  08-03-2014       38        11  ...                  5             0   \n2  21-08-2013       26       426  ...                  4             0   \n3  10-02-2014       26        11  ...                  6             0   \n4  19-01-2014       94       173  ...                  5             0   \n\n   AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Complain  \\\n0             0             0             0             0         0   \n1             0             0             0             0         0   \n2             0             0             0             0         0   \n3             0             0             0             0         0   \n4             0             0             0             0         0   \n\n   Z_CostContact  Z_Revenue  Response  \n0              3         11         1  \n1              3         11         0  \n2              3         11         0  \n3              3         11         0  \n4              3         11         0  \n\n[5 rows x 29 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>Year_Birth</th>\n      <th>Education</th>\n      <th>Marital_Status</th>\n      <th>Income</th>\n      <th>Kidhome</th>\n      <th>Teenhome</th>\n      <th>Dt_Customer</th>\n      <th>Recency</th>\n      <th>MntWines</th>\n      <th>...</th>\n      <th>NumWebVisitsMonth</th>\n      <th>AcceptedCmp3</th>\n      <th>AcceptedCmp4</th>\n      <th>AcceptedCmp5</th>\n      <th>AcceptedCmp1</th>\n      <th>AcceptedCmp2</th>\n      <th>Complain</th>\n      <th>Z_CostContact</th>\n      <th>Z_Revenue</th>\n      <th>Response</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5524</td>\n      <td>1957</td>\n      <td>Graduation</td>\n      <td>Single</td>\n      <td>58138.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>04-09-2012</td>\n      <td>58</td>\n      <td>635</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2174</td>\n      <td>1954</td>\n      <td>Graduation</td>\n      <td>Single</td>\n      <td>46344.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>08-03-2014</td>\n      <td>38</td>\n      <td>11</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4141</td>\n      <td>1965</td>\n      <td>Graduation</td>\n      <td>Together</td>\n      <td>71613.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>21-08-2013</td>\n      <td>26</td>\n      <td>426</td>\n      <td>...</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6182</td>\n      <td>1984</td>\n      <td>Graduation</td>\n      <td>Together</td>\n      <td>26646.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>10-02-2014</td>\n      <td>26</td>\n      <td>11</td>\n      <td>...</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5324</td>\n      <td>1981</td>\n      <td>PhD</td>\n      <td>Married</td>\n      <td>58293.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>19-01-2014</td>\n      <td>94</td>\n      <td>173</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.802720Z","iopub.execute_input":"2024-09-29T06:52:15.804906Z","iopub.status.idle":"2024-09-29T06:52:15.931863Z","shell.execute_reply.started":"2024-09-29T06:52:15.804837Z","shell.execute_reply":"2024-09-29T06:52:15.930698Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"                 ID   Year_Birth         Income      Kidhome     Teenhome  \\\ncount   2240.000000  2240.000000    2216.000000  2240.000000  2240.000000   \nmean    5592.159821  1968.805804   52247.251354     0.444196     0.506250   \nstd     3246.662198    11.984069   25173.076661     0.538398     0.544538   \nmin        0.000000  1893.000000    1730.000000     0.000000     0.000000   \n25%     2828.250000  1959.000000   35303.000000     0.000000     0.000000   \n50%     5458.500000  1970.000000   51381.500000     0.000000     0.000000   \n75%     8427.750000  1977.000000   68522.000000     1.000000     1.000000   \nmax    11191.000000  1996.000000  666666.000000     2.000000     2.000000   \n\n           Recency     MntWines    MntFruits  MntMeatProducts  \\\ncount  2240.000000  2240.000000  2240.000000      2240.000000   \nmean     49.109375   303.935714    26.302232       166.950000   \nstd      28.962453   336.597393    39.773434       225.715373   \nmin       0.000000     0.000000     0.000000         0.000000   \n25%      24.000000    23.750000     1.000000        16.000000   \n50%      49.000000   173.500000     8.000000        67.000000   \n75%      74.000000   504.250000    33.000000       232.000000   \nmax      99.000000  1493.000000   199.000000      1725.000000   \n\n       MntFishProducts  ...  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\ncount      2240.000000  ...        2240.000000   2240.000000   2240.000000   \nmean         37.525446  ...           5.316518      0.072768      0.074554   \nstd          54.628979  ...           2.426645      0.259813      0.262728   \nmin           0.000000  ...           0.000000      0.000000      0.000000   \n25%           3.000000  ...           3.000000      0.000000      0.000000   \n50%          12.000000  ...           6.000000      0.000000      0.000000   \n75%          50.000000  ...           7.000000      0.000000      0.000000   \nmax         259.000000  ...          20.000000      1.000000      1.000000   \n\n       AcceptedCmp5  AcceptedCmp1  AcceptedCmp2     Complain  Z_CostContact  \\\ncount   2240.000000   2240.000000   2240.000000  2240.000000         2240.0   \nmean       0.072768      0.064286      0.013393     0.009375            3.0   \nstd        0.259813      0.245316      0.114976     0.096391            0.0   \nmin        0.000000      0.000000      0.000000     0.000000            3.0   \n25%        0.000000      0.000000      0.000000     0.000000            3.0   \n50%        0.000000      0.000000      0.000000     0.000000            3.0   \n75%        0.000000      0.000000      0.000000     0.000000            3.0   \nmax        1.000000      1.000000      1.000000     1.000000            3.0   \n\n       Z_Revenue     Response  \ncount     2240.0  2240.000000  \nmean        11.0     0.149107  \nstd          0.0     0.356274  \nmin         11.0     0.000000  \n25%         11.0     0.000000  \n50%         11.0     0.000000  \n75%         11.0     0.000000  \nmax         11.0     1.000000  \n\n[8 rows x 26 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>Year_Birth</th>\n      <th>Income</th>\n      <th>Kidhome</th>\n      <th>Teenhome</th>\n      <th>Recency</th>\n      <th>MntWines</th>\n      <th>MntFruits</th>\n      <th>MntMeatProducts</th>\n      <th>MntFishProducts</th>\n      <th>...</th>\n      <th>NumWebVisitsMonth</th>\n      <th>AcceptedCmp3</th>\n      <th>AcceptedCmp4</th>\n      <th>AcceptedCmp5</th>\n      <th>AcceptedCmp1</th>\n      <th>AcceptedCmp2</th>\n      <th>Complain</th>\n      <th>Z_CostContact</th>\n      <th>Z_Revenue</th>\n      <th>Response</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2216.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>...</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.000000</td>\n      <td>2240.0</td>\n      <td>2240.0</td>\n      <td>2240.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5592.159821</td>\n      <td>1968.805804</td>\n      <td>52247.251354</td>\n      <td>0.444196</td>\n      <td>0.506250</td>\n      <td>49.109375</td>\n      <td>303.935714</td>\n      <td>26.302232</td>\n      <td>166.950000</td>\n      <td>37.525446</td>\n      <td>...</td>\n      <td>5.316518</td>\n      <td>0.072768</td>\n      <td>0.074554</td>\n      <td>0.072768</td>\n      <td>0.064286</td>\n      <td>0.013393</td>\n      <td>0.009375</td>\n      <td>3.0</td>\n      <td>11.0</td>\n      <td>0.149107</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3246.662198</td>\n      <td>11.984069</td>\n      <td>25173.076661</td>\n      <td>0.538398</td>\n      <td>0.544538</td>\n      <td>28.962453</td>\n      <td>336.597393</td>\n      <td>39.773434</td>\n      <td>225.715373</td>\n      <td>54.628979</td>\n      <td>...</td>\n      <td>2.426645</td>\n      <td>0.259813</td>\n      <td>0.262728</td>\n      <td>0.259813</td>\n      <td>0.245316</td>\n      <td>0.114976</td>\n      <td>0.096391</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.356274</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>1893.000000</td>\n      <td>1730.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.0</td>\n      <td>11.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2828.250000</td>\n      <td>1959.000000</td>\n      <td>35303.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>24.000000</td>\n      <td>23.750000</td>\n      <td>1.000000</td>\n      <td>16.000000</td>\n      <td>3.000000</td>\n      <td>...</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.0</td>\n      <td>11.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5458.500000</td>\n      <td>1970.000000</td>\n      <td>51381.500000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>49.000000</td>\n      <td>173.500000</td>\n      <td>8.000000</td>\n      <td>67.000000</td>\n      <td>12.000000</td>\n      <td>...</td>\n      <td>6.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.0</td>\n      <td>11.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>8427.750000</td>\n      <td>1977.000000</td>\n      <td>68522.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>74.000000</td>\n      <td>504.250000</td>\n      <td>33.000000</td>\n      <td>232.000000</td>\n      <td>50.000000</td>\n      <td>...</td>\n      <td>7.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.0</td>\n      <td>11.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>11191.000000</td>\n      <td>1996.000000</td>\n      <td>666666.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>99.000000</td>\n      <td>1493.000000</td>\n      <td>199.000000</td>\n      <td>1725.000000</td>\n      <td>259.000000</td>\n      <td>...</td>\n      <td>20.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>3.0</td>\n      <td>11.0</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows Ã— 26 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.933534Z","iopub.execute_input":"2024-09-29T06:52:15.934011Z","iopub.status.idle":"2024-09-29T06:52:15.961084Z","shell.execute_reply.started":"2024-09-29T06:52:15.933954Z","shell.execute_reply":"2024-09-29T06:52:15.958901Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2240 entries, 0 to 2239\nData columns (total 29 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   ID                   2240 non-null   int64  \n 1   Year_Birth           2240 non-null   int64  \n 2   Education            2240 non-null   object \n 3   Marital_Status       2240 non-null   object \n 4   Income               2216 non-null   float64\n 5   Kidhome              2240 non-null   int64  \n 6   Teenhome             2240 non-null   int64  \n 7   Dt_Customer          2240 non-null   object \n 8   Recency              2240 non-null   int64  \n 9   MntWines             2240 non-null   int64  \n 10  MntFruits            2240 non-null   int64  \n 11  MntMeatProducts      2240 non-null   int64  \n 12  MntFishProducts      2240 non-null   int64  \n 13  MntSweetProducts     2240 non-null   int64  \n 14  MntGoldProds         2240 non-null   int64  \n 15  NumDealsPurchases    2240 non-null   int64  \n 16  NumWebPurchases      2240 non-null   int64  \n 17  NumCatalogPurchases  2240 non-null   int64  \n 18  NumStorePurchases    2240 non-null   int64  \n 19  NumWebVisitsMonth    2240 non-null   int64  \n 20  AcceptedCmp3         2240 non-null   int64  \n 21  AcceptedCmp4         2240 non-null   int64  \n 22  AcceptedCmp5         2240 non-null   int64  \n 23  AcceptedCmp1         2240 non-null   int64  \n 24  AcceptedCmp2         2240 non-null   int64  \n 25  Complain             2240 non-null   int64  \n 26  Z_CostContact        2240 non-null   int64  \n 27  Z_Revenue            2240 non-null   int64  \n 28  Response             2240 non-null   int64  \ndtypes: float64(1), int64(25), object(3)\nmemory usage: 507.6+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"# Check for missing values\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.962520Z","iopub.execute_input":"2024-09-29T06:52:15.963616Z","iopub.status.idle":"2024-09-29T06:52:15.974784Z","shell.execute_reply.started":"2024-09-29T06:52:15.963557Z","shell.execute_reply":"2024-09-29T06:52:15.973322Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"ID                      0\nYear_Birth              0\nEducation               0\nMarital_Status          0\nIncome                 24\nKidhome                 0\nTeenhome                0\nDt_Customer             0\nRecency                 0\nMntWines                0\nMntFruits               0\nMntMeatProducts         0\nMntFishProducts         0\nMntSweetProducts        0\nMntGoldProds            0\nNumDealsPurchases       0\nNumWebPurchases         0\nNumCatalogPurchases     0\nNumStorePurchases       0\nNumWebVisitsMonth       0\nAcceptedCmp3            0\nAcceptedCmp4            0\nAcceptedCmp5            0\nAcceptedCmp1            0\nAcceptedCmp2            0\nComplain                0\nZ_CostContact           0\nZ_Revenue               0\nResponse                0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Income'].median()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.976882Z","iopub.execute_input":"2024-09-29T06:52:15.977397Z","iopub.status.idle":"2024-09-29T06:52:15.987746Z","shell.execute_reply.started":"2024-09-29T06:52:15.977335Z","shell.execute_reply":"2024-09-29T06:52:15.986368Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"51381.5"},"metadata":{}}]},{"cell_type":"code","source":"# Fill missing values in 'Income' with the median val\ndf['Income'] = df['Income'].fillna(51381.5)","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:15.989320Z","iopub.execute_input":"2024-09-29T06:52:15.990135Z","iopub.status.idle":"2024-09-29T06:52:15.998250Z","shell.execute_reply.started":"2024-09-29T06:52:15.990073Z","shell.execute_reply":"2024-09-29T06:52:15.996632Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"# Convert 'Dt_Customer' to datetime format and extract the year\ndf['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'],format='%d-%m-%Y')","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:16.000213Z","iopub.execute_input":"2024-09-29T06:52:16.000731Z","iopub.status.idle":"2024-09-29T06:52:16.030255Z","shell.execute_reply.started":"2024-09-29T06:52:16.000663Z","shell.execute_reply":"2024-09-29T06:52:16.028589Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"df['Dt_Customer'] = df['Dt_Customer'].dt.year","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:16.036006Z","iopub.execute_input":"2024-09-29T06:52:16.036642Z","iopub.status.idle":"2024-09-29T06:52:16.046386Z","shell.execute_reply.started":"2024-09-29T06:52:16.036585Z","shell.execute_reply":"2024-09-29T06:52:16.045121Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:16.048231Z","iopub.execute_input":"2024-09-29T06:52:16.048973Z","iopub.status.idle":"2024-09-29T06:52:16.082769Z","shell.execute_reply.started":"2024-09-29T06:52:16.048909Z","shell.execute_reply":"2024-09-29T06:52:16.081310Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"     ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n0  5524        1957  Graduation         Single  58138.0        0         0   \n1  2174        1954  Graduation         Single  46344.0        1         1   \n2  4141        1965  Graduation       Together  71613.0        0         0   \n3  6182        1984  Graduation       Together  26646.0        1         0   \n4  5324        1981         PhD        Married  58293.0        1         0   \n\n   Dt_Customer  Recency  MntWines  ...  NumWebVisitsMonth  AcceptedCmp3  \\\n0         2012       58       635  ...                  7             0   \n1         2014       38        11  ...                  5             0   \n2         2013       26       426  ...                  4             0   \n3         2014       26        11  ...                  6             0   \n4         2014       94       173  ...                  5             0   \n\n   AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Complain  \\\n0             0             0             0             0         0   \n1             0             0             0             0         0   \n2             0             0             0             0         0   \n3             0             0             0             0         0   \n4             0             0             0             0         0   \n\n   Z_CostContact  Z_Revenue  Response  \n0              3         11         1  \n1              3         11         0  \n2              3         11         0  \n3              3         11         0  \n4              3         11         0  \n\n[5 rows x 29 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>Year_Birth</th>\n      <th>Education</th>\n      <th>Marital_Status</th>\n      <th>Income</th>\n      <th>Kidhome</th>\n      <th>Teenhome</th>\n      <th>Dt_Customer</th>\n      <th>Recency</th>\n      <th>MntWines</th>\n      <th>...</th>\n      <th>NumWebVisitsMonth</th>\n      <th>AcceptedCmp3</th>\n      <th>AcceptedCmp4</th>\n      <th>AcceptedCmp5</th>\n      <th>AcceptedCmp1</th>\n      <th>AcceptedCmp2</th>\n      <th>Complain</th>\n      <th>Z_CostContact</th>\n      <th>Z_Revenue</th>\n      <th>Response</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5524</td>\n      <td>1957</td>\n      <td>Graduation</td>\n      <td>Single</td>\n      <td>58138.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2012</td>\n      <td>58</td>\n      <td>635</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2174</td>\n      <td>1954</td>\n      <td>Graduation</td>\n      <td>Single</td>\n      <td>46344.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2014</td>\n      <td>38</td>\n      <td>11</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4141</td>\n      <td>1965</td>\n      <td>Graduation</td>\n      <td>Together</td>\n      <td>71613.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2013</td>\n      <td>26</td>\n      <td>426</td>\n      <td>...</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6182</td>\n      <td>1984</td>\n      <td>Graduation</td>\n      <td>Together</td>\n      <td>26646.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2014</td>\n      <td>26</td>\n      <td>11</td>\n      <td>...</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5324</td>\n      <td>1981</td>\n      <td>PhD</td>\n      <td>Married</td>\n      <td>58293.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2014</td>\n      <td>94</td>\n      <td>173</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### Create new features","metadata":{}},{"cell_type":"markdown","source":"### Visualizing the Data","metadata":{}},{"cell_type":"code","source":"# Crosstab between Marital Status and Education\npd.crosstab(df['Marital_Status'],df['Education'])","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:16.084467Z","iopub.execute_input":"2024-09-29T06:52:16.085133Z","iopub.status.idle":"2024-09-29T06:52:16.118501Z","shell.execute_reply.started":"2024-09-29T06:52:16.085078Z","shell.execute_reply":"2024-09-29T06:52:16.117213Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"Education       2n Cycle  Basic  Graduation  Master  PhD\nMarital_Status                                          \nAbsurd                 0      0           1       1    0\nAlone                  0      0           1       1    1\nDivorced              23      1         119      37   52\nMarried               81     20         433     138  192\nSingle                37     18         252      75   98\nTogether              57     14         286     106  117\nWidow                  5      1          35      12   24\nYOLO                   0      0           0       0    2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Education</th>\n      <th>2n Cycle</th>\n      <th>Basic</th>\n      <th>Graduation</th>\n      <th>Master</th>\n      <th>PhD</th>\n    </tr>\n    <tr>\n      <th>Marital_Status</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Absurd</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Alone</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Divorced</th>\n      <td>23</td>\n      <td>1</td>\n      <td>119</td>\n      <td>37</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>Married</th>\n      <td>81</td>\n      <td>20</td>\n      <td>433</td>\n      <td>138</td>\n      <td>192</td>\n    </tr>\n    <tr>\n      <th>Single</th>\n      <td>37</td>\n      <td>18</td>\n      <td>252</td>\n      <td>75</td>\n      <td>98</td>\n    </tr>\n    <tr>\n      <th>Together</th>\n      <td>57</td>\n      <td>14</td>\n      <td>286</td>\n      <td>106</td>\n      <td>117</td>\n    </tr>\n    <tr>\n      <th>Widow</th>\n      <td>5</td>\n      <td>1</td>\n      <td>35</td>\n      <td>12</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>YOLO</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Calculate average income by education level\nGrouping_Education = df.groupby(['Education'])['Income']\nGrouping_Education.mean().round(1).sort_values(ascending=False).reset_index()\n\nimport matplotlib.pyplot as plt\ndf","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:16.120211Z","iopub.execute_input":"2024-09-29T06:52:16.120704Z","iopub.status.idle":"2024-09-29T06:52:16.162558Z","shell.execute_reply.started":"2024-09-29T06:52:16.120650Z","shell.execute_reply":"2024-09-29T06:52:16.161232Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"         ID  Year_Birth   Education Marital_Status   Income  Kidhome  \\\n0      5524        1957  Graduation         Single  58138.0        0   \n1      2174        1954  Graduation         Single  46344.0        1   \n2      4141        1965  Graduation       Together  71613.0        0   \n3      6182        1984  Graduation       Together  26646.0        1   \n4      5324        1981         PhD        Married  58293.0        1   \n...     ...         ...         ...            ...      ...      ...   \n2235  10870        1967  Graduation        Married  61223.0        0   \n2236   4001        1946         PhD       Together  64014.0        2   \n2237   7270        1981  Graduation       Divorced  56981.0        0   \n2238   8235        1956      Master       Together  69245.0        0   \n2239   9405        1954         PhD        Married  52869.0        1   \n\n      Teenhome  Dt_Customer  Recency  MntWines  ...  NumWebVisitsMonth  \\\n0            0         2012       58       635  ...                  7   \n1            1         2014       38        11  ...                  5   \n2            0         2013       26       426  ...                  4   \n3            0         2014       26        11  ...                  6   \n4            0         2014       94       173  ...                  5   \n...        ...          ...      ...       ...  ...                ...   \n2235         1         2013       46       709  ...                  5   \n2236         1         2014       56       406  ...                  7   \n2237         0         2014       91       908  ...                  6   \n2238         1         2014        8       428  ...                  3   \n2239         1         2012       40        84  ...                  7   \n\n      AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  \\\n0                0             0             0             0             0   \n1                0             0             0             0             0   \n2                0             0             0             0             0   \n3                0             0             0             0             0   \n4                0             0             0             0             0   \n...            ...           ...           ...           ...           ...   \n2235             0             0             0             0             0   \n2236             0             0             0             1             0   \n2237             0             1             0             0             0   \n2238             0             0             0             0             0   \n2239             0             0             0             0             0   \n\n      Complain  Z_CostContact  Z_Revenue  Response  \n0            0              3         11         1  \n1            0              3         11         0  \n2            0              3         11         0  \n3            0              3         11         0  \n4            0              3         11         0  \n...        ...            ...        ...       ...  \n2235         0              3         11         0  \n2236         0              3         11         0  \n2237         0              3         11         0  \n2238         0              3         11         0  \n2239         0              3         11         1  \n\n[2240 rows x 29 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>Year_Birth</th>\n      <th>Education</th>\n      <th>Marital_Status</th>\n      <th>Income</th>\n      <th>Kidhome</th>\n      <th>Teenhome</th>\n      <th>Dt_Customer</th>\n      <th>Recency</th>\n      <th>MntWines</th>\n      <th>...</th>\n      <th>NumWebVisitsMonth</th>\n      <th>AcceptedCmp3</th>\n      <th>AcceptedCmp4</th>\n      <th>AcceptedCmp5</th>\n      <th>AcceptedCmp1</th>\n      <th>AcceptedCmp2</th>\n      <th>Complain</th>\n      <th>Z_CostContact</th>\n      <th>Z_Revenue</th>\n      <th>Response</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5524</td>\n      <td>1957</td>\n      <td>Graduation</td>\n      <td>Single</td>\n      <td>58138.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2012</td>\n      <td>58</td>\n      <td>635</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2174</td>\n      <td>1954</td>\n      <td>Graduation</td>\n      <td>Single</td>\n      <td>46344.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2014</td>\n      <td>38</td>\n      <td>11</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4141</td>\n      <td>1965</td>\n      <td>Graduation</td>\n      <td>Together</td>\n      <td>71613.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2013</td>\n      <td>26</td>\n      <td>426</td>\n      <td>...</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6182</td>\n      <td>1984</td>\n      <td>Graduation</td>\n      <td>Together</td>\n      <td>26646.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2014</td>\n      <td>26</td>\n      <td>11</td>\n      <td>...</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5324</td>\n      <td>1981</td>\n      <td>PhD</td>\n      <td>Married</td>\n      <td>58293.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2014</td>\n      <td>94</td>\n      <td>173</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2235</th>\n      <td>10870</td>\n      <td>1967</td>\n      <td>Graduation</td>\n      <td>Married</td>\n      <td>61223.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2013</td>\n      <td>46</td>\n      <td>709</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2236</th>\n      <td>4001</td>\n      <td>1946</td>\n      <td>PhD</td>\n      <td>Together</td>\n      <td>64014.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2014</td>\n      <td>56</td>\n      <td>406</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2237</th>\n      <td>7270</td>\n      <td>1981</td>\n      <td>Graduation</td>\n      <td>Divorced</td>\n      <td>56981.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2014</td>\n      <td>91</td>\n      <td>908</td>\n      <td>...</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2238</th>\n      <td>8235</td>\n      <td>1956</td>\n      <td>Master</td>\n      <td>Together</td>\n      <td>69245.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2014</td>\n      <td>8</td>\n      <td>428</td>\n      <td>...</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2239</th>\n      <td>9405</td>\n      <td>1954</td>\n      <td>PhD</td>\n      <td>Married</td>\n      <td>52869.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2012</td>\n      <td>40</td>\n      <td>84</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>11</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>2240 rows Ã— 29 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Calculate average income by marital status\nGrouping_MaritalStatus = df.groupby(['Marital_Status'])['Income']\nGrouping_MaritalStatus.mean().round(1).sort_values(ascending=False).reset_index()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:16.164275Z","iopub.execute_input":"2024-09-29T06:52:16.164766Z","iopub.status.idle":"2024-09-29T06:52:16.184330Z","shell.execute_reply.started":"2024-09-29T06:52:16.164712Z","shell.execute_reply":"2024-09-29T06:52:16.182995Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"  Marital_Status   Income\n0         Absurd  72365.5\n1          Widow  56415.3\n2       Together  53223.0\n3       Divorced  52834.2\n4        Married  51722.2\n5         Single  51002.6\n6           YOLO  48432.0\n7          Alone  43789.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Marital_Status</th>\n      <th>Income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Absurd</td>\n      <td>72365.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Widow</td>\n      <td>56415.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Together</td>\n      <td>53223.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Divorced</td>\n      <td>52834.2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Married</td>\n      <td>51722.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Single</td>\n      <td>51002.6</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>YOLO</td>\n      <td>48432.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Alone</td>\n      <td>43789.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"print(\"The minimum income a customer have is:\", df['Income'].min())\nprint(\"The Highest income a customer have is:\", df['Income'].max())","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:59:08.647056Z","iopub.execute_input":"2024-09-29T06:59:08.647510Z","iopub.status.idle":"2024-09-29T06:59:08.655349Z","shell.execute_reply.started":"2024-09-29T06:59:08.647463Z","shell.execute_reply":"2024-09-29T06:59:08.653812Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"The minimum income a customer have is: 1730.0\nThe Highest income a customer have is: 666666.0\n","output_type":"stream"}]},{"cell_type":"markdown","source":"minimum customer comes with a age of 28 so the data use to say there where no age category less then 28 years customer using the resources we can improve the sales by this numbersa we can provide more sanse that major customer retention is wirh the age of 28 why and get the idea of gustomer tetention","metadata":{}},{"cell_type":"code","source":"print(\"Customer Marital_status:\", df['Marital_Status'].drop_duplicates)","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:58:49.429729Z","iopub.execute_input":"2024-09-29T06:58:49.430193Z","iopub.status.idle":"2024-09-29T06:58:49.576876Z","shell.execute_reply.started":"2024-09-29T06:58:49.430148Z","shell.execute_reply":"2024-09-29T06:58:49.575452Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stdout","text":"Customer Marital_status: <bound method Series.drop_duplicates of 0       <bound method Series.drop_duplicates of 0     ...\n1       <bound method Series.drop_duplicates of 0     ...\n2       <bound method Series.drop_duplicates of 0     ...\n3       <bound method Series.drop_duplicates of 0     ...\n4       <bound method Series.drop_duplicates of 0     ...\n                              ...                        \n2235    <bound method Series.drop_duplicates of 0     ...\n2236    <bound method Series.drop_duplicates of 0     ...\n2237    <bound method Series.drop_duplicates of 0     ...\n2238    <bound method Series.drop_duplicates of 0     ...\n2239    <bound method Series.drop_duplicates of 0     ...\nName: Marital_Status, Length: 2240, dtype: object>\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The maximum age of the customer is 131 which is not possible as humen can survive 100 years","metadata":{}},{"cell_type":"code","source":"# Calculate and plot the number of acceptances for each campaign\nAccepted_Cmps = {\n    'AcceptedCmp1' : df['AcceptedCmp1'].sum(),\n    'AcceptedCmp2' : df['AcceptedCmp2'].sum(),\n    'AcceptedCmp3' : df['AcceptedCmp3'].sum(),\n    'AcceptedCmp4' : df['AcceptedCmp4'].sum(),\n    'AcceptedCmp5' : df['AcceptedCmp5'].sum(),\n    'Response' : df['Response'].sum()\n}\n\nCampaign_data = pd.Series(Accepted_Cmps)\n\nplt.figure(figsize=(10,6))\nCampaign_data.plot(kind='bar', color='Red')\nplt.xlabel('Campaign')\nplt.ylabel('Number of Acceptances')\nplt.xticks(rotation=0)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:59:57.242565Z","iopub.execute_input":"2024-09-29T06:59:57.243057Z","iopub.status.idle":"2024-09-29T06:59:57.557787Z","shell.execute_reply.started":"2024-09-29T06:59:57.243006Z","shell.execute_reply":"2024-09-29T06:59:57.556516Z"},"trusted":true},"execution_count":35,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Calculate and plot total spending for each product category\nTotal_spending={\n    'MntWines' : df['MntWines'].sum(),\n    'MntFruits' : df['MntFruits'].sum(),\n    'MntMeatProducts' :df['MntMeatProducts'].sum(),\n    'MntFishProducts' : df['MntFishProducts'].sum(),\n    'MntSweetProducts' : df['MntSweetProducts'].sum(),\n    'MntGoldProds' : df['MntGoldProds'].sum()\n}\n\nspending_data = pd.Series(Total_spending)\n\nplt.figure(figsize=(10,6))\nspending_data.plot(kind='bar', color='#e74c3c')\nplt.xlabel('Products')\nplt.ylabel('Spending Score $')\nplt.xticks(rotation=0)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T07:00:02.245002Z","iopub.execute_input":"2024-09-29T07:00:02.245648Z","iopub.status.idle":"2024-09-29T07:00:02.594561Z","shell.execute_reply.started":"2024-09-29T07:00:02.245577Z","shell.execute_reply":"2024-09-29T07:00:02.592510Z"},"trusted":true},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Average spending on wines by Marital Status\nRelation_MntWines_MaritalStatus = df.groupby(['Marital_Status'])['MntWines']\nRelation_MntWines_MaritalStatus.mean().round(1).sort_values(ascending=False).reset_index()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.869023Z","iopub.status.idle":"2024-09-29T06:52:17.869618Z","shell.execute_reply.started":"2024-09-29T06:52:17.869256Z","shell.execute_reply":"2024-09-29T06:52:17.869278Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Average spending on wines by Education Level\nRelation_MntWines_Education = df.groupby(['Education'])['MntWines']\nRelation_MntWines_Education.mean().round(1).sort_values(ascending=False).reset_index()\n\nprint('The avarage candidates are our customer ', df['Education'].min())\n     ","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.871129Z","iopub.status.idle":"2024-09-29T06:52:17.871753Z","shell.execute_reply.started":"2024-09-29T06:52:17.871480Z","shell.execute_reply":"2024-09-29T06:52:17.871507Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\n\n# Define features to scal\nfeatures_to_scale = ['Customer_Age','Income','TotalSpend','FamilySize','TotalAcceptedCmp','CustomerTenure'] \nscaler = StandardScaler()\n\n# Scale the features\ndf_scaled = scaler.fit_transform(df[features_to_scale])\ndf_scaled = pd.DataFrame(df_scaled, columns=features_to_scale)","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.872986Z","iopub.status.idle":"2024-09-29T06:52:17.873422Z","shell.execute_reply.started":"2024-09-29T06:52:17.873202Z","shell.execute_reply":"2024-09-29T06:52:17.873224Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plot heatmap of scaled features\ncorr = df_scaled.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(corr, annot=True, cmap='coolwarm',fmt='.2f')\nplt.title('Correlation Matrix of Scaled Feature')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.874594Z","iopub.status.idle":"2024-09-29T06:52:17.875001Z","shell.execute_reply.started":"2024-09-29T06:52:17.874793Z","shell.execute_reply":"2024-09-29T06:52:17.874814Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Determine the optimal number of clusters using the Elbow method\nfrom sklearn.cluster import KMeans\n\nwcss=[]\nfor i in range(1,11):\n    kmeans = KMeans(n_clusters=i,init='k-means++', max_iter=300,n_init=100, random_state=42)\n    kmeans.fit(df_scaled)\n    wcss.append(kmeans.inertia_)\n\nplt.plot(range(1,11),wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of Clusters')\nplt.ylabel('WCSS')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.877123Z","iopub.status.idle":"2024-09-29T06:52:17.877661Z","shell.execute_reply.started":"2024-09-29T06:52:17.877345Z","shell.execute_reply":"2024-09-29T06:52:17.877369Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Apply K-Means with the optimal number of clusters\noptimal_k = 4\nkmeans = KMeans(n_clusters=optimal_k, init='k-means++', max_iter=300, n_init=10, random_state=42)\ndf['Cluster_pred'] = kmeans.fit_predict(df_scaled)","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.880739Z","iopub.status.idle":"2024-09-29T06:52:17.881180Z","shell.execute_reply.started":"2024-09-29T06:52:17.880969Z","shell.execute_reply":"2024-09-29T06:52:17.880991Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Cluster'] = kmeans.labels_","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.882744Z","iopub.status.idle":"2024-09-29T06:52:17.883160Z","shell.execute_reply.started":"2024-09-29T06:52:17.882958Z","shell.execute_reply":"2024-09-29T06:52:17.882979Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Summarize cluster characteristics\nnumeric_df = df.select_dtypes(include=['number'])\ncluster_summary = numeric_df.groupby('Cluster').mean()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.884424Z","iopub.status.idle":"2024-09-29T06:52:17.884886Z","shell.execute_reply.started":"2024-09-29T06:52:17.884675Z","shell.execute_reply":"2024-09-29T06:52:17.884697Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cluster_summary","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.886413Z","iopub.status.idle":"2024-09-29T06:52:17.886868Z","shell.execute_reply.started":"2024-09-29T06:52:17.886651Z","shell.execute_reply":"2024-09-29T06:52:17.886673Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Get cluster centroids \ncentroids = kmeans.cluster_centers_\ncentroid_df = pd.DataFrame(centroids, columns=df_scaled.columns)\ncentroid_df['Cluster'] = range(len(centroid_df))\n","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.888191Z","iopub.status.idle":"2024-09-29T06:52:17.888650Z","shell.execute_reply.started":"2024-09-29T06:52:17.888405Z","shell.execute_reply":"2024-09-29T06:52:17.888425Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"centroid_df","metadata":{"execution":{"iopub.status.busy":"2024-09-29T06:52:17.890250Z","iopub.status.idle":"2024-09-29T06:52:17.890721Z","shell.execute_reply.started":"2024-09-29T06:52:17.890463Z","shell.execute_reply":"2024-09-29T06:52:17.890493Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Summary","metadata":{}},{"cell_type":"markdown","source":"* ##### Cluster 0: Younger, lower-income, and lower-spending customers with average family size and low engagement in marketing campaigns.\n* ##### Cluster 1: Older customers with moderate income and spending, larger families, and lower tenure.\n* ##### Cluster 2: High-income, high-spending customers who are highly responsive to marketing campaigns, likely with smaller families and longer tenure.\n* ##### Cluster 3: Somewhat older, higher-income customers who spend more, with smaller families and longer tenure.","metadata":{}}]}